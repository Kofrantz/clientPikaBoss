{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiki_\\\\Desktop\\\\Curso SoyHenry\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Filter.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filter() {\n  _s();\n\n  const {\n    types\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState({\n    bug: false,\n    dark: false,\n    dragon: false,\n    electric: false,\n    fairy: false,\n    fighting: false,\n    fire: false,\n    flying: false,\n    ghost: false,\n    grass: false,\n    ground: false,\n    ice: false,\n    normal: false,\n    poison: false,\n    psychic: false,\n    rock: false,\n    shadow: false,\n    steel: false,\n    unknown: false,\n    water: false\n  });\n\n  function handleTypesChange(type) {\n    console.log(type);\n    setChecked({ ...checked,\n      [type]: !checked[type]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeFilter\",\n      children: types.map(t => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: checked[t],\n          checked: checked[t],\n          onChange: () => {\n            handleTypesChange(t);\n          }\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 40\n        }, this), t]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filter, \"5eXOgcN1VRYtx5euBdIVEvY6Ty0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/tiki_/Desktop/Curso SoyHenry/PI-Pokemon-main/client/src/components/Filter.jsx"],"names":["useState","useDispatch","useSelector","Filter","types","state","dispatch","checked","setChecked","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","shadow","steel","unknown","water","handleTypesChange","type","console","log","map","t"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAUF,WAAW,CAAEG,KAAD,IAAWA,KAAZ,CAA3B;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC;AACnCS,IAAAA,GAAG,EAAE,KAD8B;AACvBC,IAAAA,IAAI,EAAE,KADiB;AACVC,IAAAA,MAAM,EAAE,KADE;AACKC,IAAAA,QAAQ,EAAE,KADf;AACsBC,IAAAA,KAAK,EAAE,KAD7B;AAEnCC,IAAAA,QAAQ,EAAE,KAFyB;AAElBC,IAAAA,IAAI,EAAE,KAFY;AAELC,IAAAA,MAAM,EAAE,KAFH;AAEUC,IAAAA,KAAK,EAAE,KAFjB;AAEwBC,IAAAA,KAAK,EAAE,KAF/B;AAGnCC,IAAAA,MAAM,EAAE,KAH2B;AAGpBC,IAAAA,GAAG,EAAE,KAHe;AAGRC,IAAAA,MAAM,EAAE,KAHA;AAGOC,IAAAA,MAAM,EAAE,KAHf;AAGsBC,IAAAA,OAAO,EAAE,KAH/B;AAInCC,IAAAA,IAAI,EAAE,KAJ6B;AAItBC,IAAAA,MAAM,EAAE,KAJc;AAIPC,IAAAA,KAAK,EAAE,KAJA;AAIOC,IAAAA,OAAO,EAAE,KAJhB;AAIuBC,IAAAA,KAAK,EAAE;AAJ9B,GAAD,CAAtC;;AAMA,WAASC,iBAAT,CAA2BC,IAA3B,EAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAtB,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAa,OAACuB,IAAD,GAAQ,CAACvB,OAAO,CAACuB,IAAD;AAA7B,KAAD,CAAV;AAEH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACK1B,KAAK,CAAC6B,GAAN,CAAUC,CAAC,iBAAI;AAAA,gCAAO;AAAe,UAAA,IAAI,EAAC,UAApB;AAA+B,UAAA,KAAK,EAAE3B,OAAO,CAAC2B,CAAD,CAA7C;AAAkD,UAAA,OAAO,EAAE3B,OAAO,CAAC2B,CAAD,CAAlE;AAAuE,UAAA,QAAQ,EAAE,MAAM;AAACL,YAAAA,iBAAiB,CAACK,CAAD,CAAjB;AAAqB;AAA7G,WAAYA,CAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP,EAAwHA,CAAxH;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GArBuB/B,M;UACJD,W,EACCD,W;;;KAFGE,M","sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function Filter(){\r\n    const {types} = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const [checked, setChecked] = useState({\r\n        bug: false, dark: false, dragon: false, electric: false, fairy: false, \r\n        fighting: false, fire: false, flying: false, ghost: false, grass: false, \r\n        ground: false, ice: false, normal: false, poison: false, psychic: false, \r\n        rock: false, shadow: false, steel: false, unknown: false, water: false, \r\n    })\r\n    function handleTypesChange(type){\r\n        console.log(type)\r\n        setChecked({...checked, [type]: !checked[type]})\r\n\r\n    }\r\n    return(\r\n        <div className=\"filters\">\r\n            <div className='typeFilter'>\r\n                {types.map(t => <label><input key={t} type=\"checkbox\" value={checked[t]} checked={checked[t]} onChange={() => {handleTypesChange(t)}}/>{t}</label>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}