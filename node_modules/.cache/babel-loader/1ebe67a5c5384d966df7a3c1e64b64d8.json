{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiki_\\\\Desktop\\\\Curso SoyHenry\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Cards.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { changePage, toogleMenu } from '../reducer/actions';\nimport Filter from './Filter';\nimport Loading from './Loading';\nimport Order from './Order';\nimport NotFound from './NotFound';\nimport './styles/Cards.css';\nimport { CreateBtn, SearchBar } from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n\n  const {\n    pokemons,\n    page,\n    order,\n    types,\n    filters,\n    menu\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const ordered = orderMachine(order, pokemons, types);\n  const filtered = filterMachine(filters, ordered);\n  const pokeGroup = filtered.slice((page - 1) * 12, page * 12);\n\n  function handlePage(pag) {\n    if (page === pag) return;\n    if (pag > Math.ceil(filtered.length / 12) || pag < 1) return;\n    dispatch(changePage(pag));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this)\n  /* !pokemons.length ? <><div className=\"footerFix\"><Loading/></div></> : <div className=\"cardsAndFilterContainer\">\r\n      <div className=\"footerFix\"/>\r\n      <div className={!menu ? \"filterAndOrderContainer\" : \"filterAndOrderContainerDeployed\"}>\r\n          <CreateBtn class='movil'/>\r\n          <SearchBar class='movil'/>\r\n          <Order/>\r\n          <Filter/>\r\n      </div>\r\n      <div className={'cardsContainer'+(menu ? ' blur' : '')}>\r\n          <div className='cards'>\r\n              {menu && <div className=\"blurScreen\" onClick={() =>{dispatch(toogleMenu(false))}}></div>}\r\n              {!pokeGroup.length ? <NotFound/> : pokeGroup.map(p => \r\n                  <NavLink to={`/home/${p.id}`} key={p.id}>\r\n                      <div className='card'>\r\n                          <span className='name'>{capitalize(p.name)}</span>\r\n                          {p.image ? <img className='cardImg' src={p.image}/> : <p style={{fontSize: '48px'}}>?</p>}\r\n                          <div className='types'>\r\n                              {p.types?.map(t => {\r\n                                  return (\r\n                                      <div key={t} className='type'>\r\n                                          <img className='typeImg' src={`typesLogos/${t}.png`}/>\r\n                                          <p >{capitalize(t)}</p>\r\n                                      </div>\r\n                                  )\r\n                              })}\r\n                          </div>\r\n                      </div>\r\n                  </NavLink>\r\n              )}\r\n          </div>\r\n          \r\n          {!pokeGroup.length ? null : <div className='pages'>\r\n              <button onClick={() => {handlePage(page-1)}}>{'<'}</button>\r\n                  {newOrdArray(Math.ceil(filtered.length/12)).map(p => \r\n                      <button onClick={() => {handlePage(p)}}>{p}</button>)}\r\n              <button onClick={() => {handlePage(page+1)}}>{'>'}</button>\r\n          </div>}\r\n      </div>\r\n  </div> */\n  ;\n}\n\n_s(Cards, \"ie3JR/VwtGxFE3GdsLhl6me5VzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Cards;\n\nfunction orderMachine(order, pokemons, types) {\n  switch (order) {\n    case 'A - Z':\n      return pokemons.sort((a, b) => a.name.localeCompare(b.name));\n\n    case 'Z - A':\n      return pokemons.sort((a, b) => b.name.localeCompare(a.name));\n\n    case 'Mas fuerte':\n      return pokemons.sort((a, b) => b.attack - a.attack);\n\n    case 'Mas defensivo':\n      return pokemons.sort((a, b) => b.defense - a.defense);\n\n    case 'Mas rapido':\n      return pokemons.sort((a, b) => b.speed - a.speed);\n\n    default:\n      return pokemons;\n  }\n}\n\nfunction filterMachine(filters, pokemons) {\n  let pokeGroup = pokemons;\n  filters.typeFilter.forEach(element => {\n    pokeGroup = pokeGroup.filter(p => {\n      var _p$types;\n\n      return (_p$types = p.types) === null || _p$types === void 0 ? void 0 : _p$types.map(t => t).find(x => x === element);\n    });\n  });\n  if (filters.originFilter !== 'All') pokeGroup = pokeGroup.filter(x => x.origin === filters.originFilter);\n  return pokeGroup;\n}\n\nfunction newOrdArray(n) {\n  let arr = [];\n\n  for (var i = 1; i <= n; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nconst capitalize = str => str[0].toUpperCase() + str.slice(1);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/tiki_/Desktop/Curso SoyHenry/PI-Pokemon-main/client/src/components/Cards.jsx"],"names":["useDispatch","useSelector","NavLink","changePage","toogleMenu","Filter","Loading","Order","NotFound","CreateBtn","SearchBar","Cards","pokemons","page","order","types","filters","menu","state","dispatch","ordered","orderMachine","filtered","filterMachine","pokeGroup","slice","handlePage","pag","Math","ceil","length","sort","a","b","name","localeCompare","attack","defense","speed","typeFilter","forEach","element","filter","p","map","t","find","x","originFilter","origin","newOrdArray","n","arr","i","push","capitalize","str","toUpperCase"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { changePage, toogleMenu } from '../reducer/actions';\r\nimport Filter from './Filter';\r\nimport Loading from './Loading';\r\nimport Order from './Order';\r\nimport NotFound from './NotFound';\r\nimport './styles/Cards.css';\r\nimport { CreateBtn, SearchBar } from './Nav';\r\n\r\nexport default function Cards(){\r\n    const {pokemons,page,order,types,filters,menu} = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    \r\n    const ordered = orderMachine(order, pokemons, types)\r\n    const filtered = filterMachine(filters, ordered)    \r\n    const pokeGroup = filtered.slice((page-1)*12, page*12)\r\n\r\n    function handlePage(pag){\r\n        if (page === pag) return;\r\n        if (pag > Math.ceil(filtered.length/12) || pag < 1) return;\r\n        dispatch(changePage(pag))\r\n    }\r\n    return(<Loading/>\r\n        /* !pokemons.length ? <><div className=\"footerFix\"><Loading/></div></> : <div className=\"cardsAndFilterContainer\">\r\n            <div className=\"footerFix\"/>\r\n            <div className={!menu ? \"filterAndOrderContainer\" : \"filterAndOrderContainerDeployed\"}>\r\n                <CreateBtn class='movil'/>\r\n                <SearchBar class='movil'/>\r\n                <Order/>\r\n                <Filter/>\r\n            </div>\r\n            <div className={'cardsContainer'+(menu ? ' blur' : '')}>\r\n                <div className='cards'>\r\n                    {menu && <div className=\"blurScreen\" onClick={() =>{dispatch(toogleMenu(false))}}></div>}\r\n                    {!pokeGroup.length ? <NotFound/> : pokeGroup.map(p => \r\n                        <NavLink to={`/home/${p.id}`} key={p.id}>\r\n                            <div className='card'>\r\n                                <span className='name'>{capitalize(p.name)}</span>\r\n                                {p.image ? <img className='cardImg' src={p.image}/> : <p style={{fontSize: '48px'}}>?</p>}\r\n                                <div className='types'>\r\n                                    {p.types?.map(t => {\r\n                                        return (\r\n                                            <div key={t} className='type'>\r\n                                                <img className='typeImg' src={`typesLogos/${t}.png`}/>\r\n                                                <p >{capitalize(t)}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </NavLink>\r\n                    )}\r\n                </div>\r\n                \r\n                {!pokeGroup.length ? null : <div className='pages'>\r\n                    <button onClick={() => {handlePage(page-1)}}>{'<'}</button>\r\n                        {newOrdArray(Math.ceil(filtered.length/12)).map(p => \r\n                            <button onClick={() => {handlePage(p)}}>{p}</button>)}\r\n                    <button onClick={() => {handlePage(page+1)}}>{'>'}</button>\r\n                </div>}\r\n            </div>\r\n        </div> */\r\n    )\r\n}\r\n\r\nfunction orderMachine(order, pokemons, types){\r\n    switch(order){\r\n        case 'A - Z': \r\n        return pokemons.sort((a,b) => a.name.localeCompare(b.name))\r\n\r\n        case 'Z - A': \r\n        return pokemons.sort((a,b) => b.name.localeCompare(a.name))\r\n\r\n        case 'Mas fuerte': \r\n        return pokemons.sort((a,b) => b.attack-a.attack)\r\n\r\n        case 'Mas defensivo': \r\n        return pokemons.sort((a,b) => b.defense-a.defense)\r\n        \r\n        case 'Mas rapido': \r\n        return pokemons.sort((a,b) => b.speed-a.speed)\r\n        \r\n        default: return pokemons\r\n    }\r\n}\r\n\r\nfunction filterMachine(filters, pokemons){\r\n    let pokeGroup = pokemons\r\n    filters.typeFilter.forEach(element => {\r\n        pokeGroup = pokeGroup.filter(p => \r\n            p.types?.map(t => t).find(x => x === element))\r\n    })\r\n    if(filters.originFilter !== 'All') pokeGroup = pokeGroup.filter(x => x.origin === filters.originFilter)\r\n    return pokeGroup\r\n}\r\n\r\nfunction newOrdArray(n){\r\n    let arr = []\r\n    for(var i = 1; i <= n; i++){\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst capitalize = (str) => str[0].toUpperCase()+str.slice(1) "]},"metadata":{},"sourceType":"module"}