{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiki_\\\\Desktop\\\\Curso SoyHenry\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Cards.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { changeOrder, changeFilter, changePage } from '../reducer/actions';\nimport Loading from './Loading';\nimport Order from './Order';\nimport './styles/Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n\n  const {\n    pokemons,\n    page,\n    order,\n    types\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const ordered = orderMachine(order, pokemons, types);\n  const pokeGroup = order !== 'Por Tipo' ? ordered.slice((page - 1) * 12, page * 12) : ordered;\n  console.log(pokeGroup.map(a => a.attack));\n\n  function handlePage(pag) {\n    if (page === pag) return;\n    if (pag > Math.ceil(pokemons.length / 12) || pag < 1) return;\n    dispatch(changePage(pag));\n  }\n\n  function handleFilter(filter) {\n    dispatch(changeFilter(filter));\n  }\n\n  return !pokemons.length ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), order !== 'Por Tipo' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: pokeGroup.map(p => {\n        var _p$types;\n\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/home/${p.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), p.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: p.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '48px'\n              },\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 71\n            }, this), (_p$types = p.types) === null || _p$types === void 0 ? void 0 : _p$types.map(t => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t.type.name\n            }, t.type.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 56\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this) : Object.keys(pokeGroup).map(t => {\n      if (pokeGroup[t].length) return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: pokeGroup[t].map(p => /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/home/${p.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: p.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: p.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this), p.types.map(t => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: t.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 59\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);else return;\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePage(page - 1);\n        },\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), newOrdArray(Math.ceil(pokemons.length / 12)).map(p => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePage(p);\n        },\n        children: p\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePage(page + 1);\n        },\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cards, \"l6IpKFYYh2VmT4u8M0fgLXGvGF8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Cards;\n\nfunction orderMachine(order, pokemons, types) {\n  switch (order) {\n    case 'A - Z':\n      return pokemons.sort((a, b) => a.name.localeCompare(b.name));\n\n    case 'Z - A':\n      return pokemons.sort((a, b) => b.name.localeCompare(a.name));\n\n    case 'Por Tipo':\n      const ty = types.sort();\n      const ordType = ty.map(type => [type, pokemons.filter(p => p.types.find(t => t.type.name === type))]);\n      return Object.fromEntries(ordType);\n\n    case 'Mas fuerte':\n      return pokemons.sort((a, b) => b.attack - a.attack);\n\n    case 'Mas defensivo':\n      return pokemons.sort((a, b) => a - b);\n\n    case 'Mas rapido':\n      return pokemons.sort((a, b) => a - b);\n\n    default:\n      return pokemons;\n  }\n}\n\nfunction newOrdArray(n) {\n  let arr = [];\n\n  for (var i = 1; i <= n; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/tiki_/Desktop/Curso SoyHenry/PI-Pokemon-main/client/src/components/Cards.jsx"],"names":["useDispatch","useSelector","NavLink","changeOrder","changeFilter","changePage","Loading","Order","Cards","pokemons","page","order","types","state","dispatch","ordered","orderMachine","pokeGroup","slice","console","log","map","a","attack","handlePage","pag","Math","ceil","length","handleFilter","filter","p","id","name","image","fontSize","t","type","Object","keys","newOrdArray","sort","b","localeCompare","ty","ordType","find","fromEntries","n","arr","i","push"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { changeOrder, changeFilter, changePage } from '../reducer/actions';\r\nimport Loading from './Loading';\r\nimport Order from './Order';\r\nimport './styles/Cards.css';\r\n\r\nexport default function Cards(){\r\n    const {pokemons,page,order,types} = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const ordered = orderMachine(order, pokemons, types)\r\n\r\n    const pokeGroup = order !== 'Por Tipo' ? ordered.slice((page-1)*12, page*12) \r\n    : ordered\r\n    console.log(pokeGroup.map(a => a.attack))\r\n    function handlePage(pag){\r\n        if (page === pag) return;\r\n        if (pag > Math.ceil(pokemons.length/12) || pag < 1) return;\r\n        dispatch(changePage(pag))\r\n    }\r\n    function handleFilter(filter){\r\n        dispatch(changeFilter(filter))\r\n    }\r\n    return(\r\n        !pokemons.length ? <Loading/> : <>\r\n            <Order/>\r\n                {order !== 'Por Tipo' ?\r\n                    <div className='cards'>\r\n                        {pokeGroup.map(p => \r\n                            <NavLink to={`/home/${p.id}`} key={p.id}>\r\n                                <div className='card'>\r\n                                    <span>{p.name}</span>\r\n                                    {p.image ? <img src={p.image}/> : <p style={{fontSize: '48px'}}>?</p>}\r\n                                    {p.types?.map(t => <p key={t.type.name}>{t.type.name}</p>)}\r\n                                </div>\r\n                            </NavLink>\r\n                        )}\r\n                    </div>\r\n                    : \r\n                    Object.keys(pokeGroup).map(t => {if (pokeGroup[t].length) return <>\r\n                        <h2>{t}</h2>\r\n                        <br />\r\n                        <div className='cards'>\r\n                            {pokeGroup[t].map(p => \r\n                                <NavLink to={`/home/${p.id}`} key={p.id}>\r\n                                    <div className='card'>\r\n                                        <span>{p.name}</span>\r\n                                        <img src={p.image}/>\r\n                                        {p.types.map(t => <p>{t.type.name}</p>)}\r\n                                    </div>\r\n                                </NavLink>)}\r\n                        </div>\r\n                        </>\r\n                        else return}\r\n                    )\r\n                }\r\n            <div className='pages'>\r\n                <button onClick={() => {handlePage(page-1)}}>{'<'}</button>\r\n                {newOrdArray(Math.ceil(pokemons.length/12)).map(p => \r\n                    <button onClick={() => {handlePage(p)}}>{p}</button>)}\r\n                <button onClick={() => {handlePage(page+1)}}>{'>'}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction orderMachine(order, pokemons, types){\r\n    switch(order){\r\n        case 'A - Z': \r\n        return pokemons.sort((a,b) => a.name.localeCompare(b.name))\r\n\r\n        case 'Z - A': \r\n        return pokemons.sort((a,b) => b.name.localeCompare(a.name))\r\n\r\n        case 'Por Tipo': \r\n            const ty = types.sort()\r\n            const ordType = ty.map(type => \r\n                [type, \r\n                pokemons.filter(p => p.types.find(t => t.type.name === type))]\r\n            )\r\n        return Object.fromEntries(ordType) \r\n\r\n        case 'Mas fuerte': \r\n        return pokemons.sort((a,b) => b.attack-a.attack)\r\n\r\n        case 'Mas defensivo': \r\n        return pokemons.sort((a,b) => a-b)\r\n        \r\n        case 'Mas rapido': \r\n        return pokemons.sort((a,b) => a-b)\r\n        \r\n        default: return pokemons\r\n    }\r\n}\r\n\r\nfunction newOrdArray(n){\r\n    let arr = []\r\n    for(var i = 1; i <= n; i++){\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}"]},"metadata":{},"sourceType":"module"}