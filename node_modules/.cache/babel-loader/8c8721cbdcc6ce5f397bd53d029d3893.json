{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiki_\\\\Desktop\\\\Curso SoyHenry\\\\PI-Pokemon-main\\\\client\\\\src\\\\components\\\\Cards.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Loading from './Loading';\nimport './styles/Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n\n  const pokemons = useSelector(state => state.pokemons);\n  return !pokemons.length ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: pokemons.map(p => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/home/${p.id}`,\n        children: [console.log(typeof p.id), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: p.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), p.types.map(t => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t.type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 47\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Cards, \"4i6YteY90n2/jOeOuWjBwNgNkos=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/tiki_/Desktop/Curso SoyHenry/PI-Pokemon-main/client/src/components/Cards.jsx"],"names":["useSelector","NavLink","Loading","Cards","pokemons","state","length","map","p","id","console","log","name","image","types","t","type"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,oBAAP;;AAEA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AAEA,SACI,CAACA,QAAQ,CAACE,MAAV,gBAAmB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAnB,gBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKF,QAAQ,CAACG,GAAT,CAAaC,CAAC,IAAI;AACf,0BAAO,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,SAAQA,CAAC,CAACC,EAAG,EAA3B;AAAA,mBACFC,OAAO,CAACC,GAAR,CAAY,OAAOH,CAAC,CAACC,EAArB,CADE,eAEH;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAA,sBAAOD,CAAC,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEJ,CAAC,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKL,CAAC,CAACM,KAAF,CAAQP,GAAR,CAAYQ,CAAC,iBAAI;AAAA,sBAAIA,CAAC,CAACC,IAAF,CAAOJ;AAAX;AAAA;AAAA;AAAA;AAAA,kBAAjB,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFG;AAAA,SAAmCJ,CAAC,CAACC,EAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH,KATA;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AAeH;;GAlBuBN,K;UACHH,W;;;KADGG,K","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Loading from './Loading';\r\nimport './styles/Cards.css';\r\n\r\nexport default function Cards(){\r\n    const pokemons = useSelector((state) => state.pokemons)\r\n\r\n    return(\r\n        !pokemons.length ? <Loading/> : \r\n            <div className='cards'>\r\n                {pokemons.map(p => {\r\n                    return <NavLink to={`/home/${p.id}`} key={p.id}>\r\n                        {console.log(typeof p.id)}\r\n                        <div className='card'>\r\n                            <span>{p.name}</span>\r\n                            <img src={p.image}/>\r\n                            {p.types.map(t => <p>{t.type.name}</p>)}\r\n                        </div>\r\n                    </NavLink>\r\n                })}\r\n            </div>  \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}